<?php

/**
 * @file
 * Defines shipping methods for Circa Desserts.
 */



/**
 * Implements hook_commerce_shipping_method_info().
 */
function circa_shipping_commerce_shipping_method_info() {
  $shipping_methods = array();

  $shipping_methods['circa_standard_shipping'] = array(
    'title' => t('Flat rate shipping'),
    'description' => t('Defines a couple of flat rate services.'),
  );

  return $shipping_methods;
}

/**
 * Implements hook_commerce_shipping_service_info().
 */
function circa_shipping_commerce_shipping_service_info() {
  $shipping_services = array();

  $shipping_services['circa_shipping_free_shipping'] = array(
    'title' => t('Free shipping'),
    'description' => t('Free shipping for orders over $30.'),
    'shipping_method' => 'circa_standard_shipping',
    'price_component' => 'shipping',
    'callbacks' => array(
      'rate' => 'circa_shipping_shipping_service_rate',
    ),
  );

  $shipping_services['circa_shipping_standard_shipping'] = array(
    'title' => t('Standard shipping'),
    'description' => t('Standard shipping'),
    'shipping_method' => 'circa_standard_shipping',
    'price_component' => 'shipping',
    'callbacks' => array(
      'rate' => 'circa_shipping_shipping_service_rate',
    ),
  );

  return $shipping_services;
}

/**
 * Shipping service callback: returns a base price array for a shipping service
 * calculated for the given order.
 */
function circa_shipping_shipping_service_rate($shipping_service, $order) {
  switch ($shipping_service['name']) {
    case 'circa_shipping_standard_shipping':
      $amount = 500;
      break;

    default:
     $amount = 0;
  }

  return array(
    'amount' => $amount,
    'currency_code' => 'USD',
    'data' => array(),
  );
}
